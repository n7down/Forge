// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/n7down/Forge/models (interfaces: BatteryRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/n7down/Forge/models"
	reflect "reflect"
)

// MockBatteryRepository is a mock of BatteryRepository interface
type MockBatteryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBatteryRepositoryMockRecorder
}

// MockBatteryRepositoryMockRecorder is the mock recorder for MockBatteryRepository
type MockBatteryRepositoryMockRecorder struct {
	mock *MockBatteryRepository
}

// NewMockBatteryRepository creates a new mock instance
func NewMockBatteryRepository(ctrl *gomock.Controller) *MockBatteryRepository {
	mock := &MockBatteryRepository{ctrl: ctrl}
	mock.recorder = &MockBatteryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBatteryRepository) EXPECT() *MockBatteryRepositoryMockRecorder {
	return m.recorder
}

// AddBattery mocks base method
func (m *MockBatteryRepository) AddBattery(arg0 models.BatteryRequest) error {
	ret := m.ctrl.Call(m, "AddBattery", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddBattery indicates an expected call of AddBattery
func (mr *MockBatteryRepositoryMockRecorder) AddBattery(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddBattery", reflect.TypeOf((*MockBatteryRepository)(nil).AddBattery), arg0)
}

// GetAllBatteries mocks base method
func (m *MockBatteryRepository) GetAllBatteries() ([]*models.BatteryResponse, error) {
	ret := m.ctrl.Call(m, "GetAllBatteries")
	ret0, _ := ret[0].([]*models.BatteryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllBatteries indicates an expected call of GetAllBatteries
func (mr *MockBatteryRepositoryMockRecorder) GetAllBatteries() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllBatteries", reflect.TypeOf((*MockBatteryRepository)(nil).GetAllBatteries))
}
